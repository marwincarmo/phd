{
  "hash": "146767d472791e83133759468cb3cdc5",
  "result": {
    "markdown": "---\ntitle: \"Week 3 - Simple and multiple linear regression\"\nsubtitle: \"PSC 103B\"\nauthor: \"Marwin Carmo\"\nformat: \n  revealjs:\n    scrollable: true\n    #chalkboard: true\n    incremental: true\n    code-tools: true\n    code-copy: true\n    code-line-numbers: true\n    code-link: true\n    preview-links: true\n    slide-number: true\n    self-contained: true\n    fig-height: 4\n    fig-width: 6\n    fig-align: center\n    #css: custom.css\n    #theme: psc290-23\n    # highlight-style: atom-one-dark\n    margin-left: \"0\"\n    margin-right: \"0\"\n    width: 1400\n    # height: 900\n    footer: \"PSC 103B - Statistical Analysis of Psychological Data\"\n    logo: \"https://github.com/emoriebeck/psc290-data-viz-2022/raw/main/01-week1-intro/02-code/02-images/ucdavis_logo_blue.png\"\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n## Today's dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreading <- read.csv(\"data/Lab3Data.csv\", header = TRUE)\n```\n:::\n\n\n\n## Simple linear regression\n\n\n::: {.cell}\n\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n- Regression examine the relation between an outcome variable and a set of *q* predictor variables.\n\n- In simple linear regression there is only one predictor\n\n- $y_i = b_0 + b_1x_1 + \\epsilon_i$\n:::\n\n::: {.column width=\"50%\"}\n::: fragment\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-simple_multiple_regression_files/figure-revealjs/unnamed-chunk-3-1.png){width=576}\n:::\n:::\n\n:::\n:::\n:::\n\n## Simple linear regression\n\n- In R we use the `lm()` to estimate a regression model\n\n- `lm(dependent_variable ~ independent_variable, data = data_name)`\n\n- Fit a linear model with the `lm()` function predicting `OverallLiteracy` from `ChildAge` and save to an object called `literacy_age`. \n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nliteracy_age <- lm(OverallLiteracy ~ ChildAge, data = reading)\n```\n:::\n\n:::\n\n- What function can we use to see the results of the regression analysis?\n\n## The `lm()` output\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(literacy_age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = OverallLiteracy ~ ChildAge, data = reading)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.3463 -1.3542 -0.0035  1.5401  5.5831 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 10.33375    1.40062   7.378 1.07e-11 ***\nChildAge     0.20033    0.02792   7.175 3.23e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.342 on 148 degrees of freedom\nMultiple R-squared:  0.2581,\tAdjusted R-squared:  0.2531 \nF-statistic: 51.48 on 1 and 148 DF,  p-value: 3.226e-11\n```\n:::\n:::\n\n:::\n\n\n---\n::: {.cell}\n\n:::\n\nNow fit a linear model predicting `OverallLiteracy` from `ParentChildAct`.\n\n- What is the estimate of the y-intercept for the model, rounded to three decimal places?\n\n- If the GLM for this model is $OverallLiteracy_i = b_0 + b_1 \\times ParentChildAct_i + \\epsilon_i$, then $b_1$ is? What does it mean?\n\n- Is the overall model significant?\n\n- What proportion of the variance does the model explain?\n\n- 2 + 2 is _\n\n---\n\n\n## {auto-animate=true}\n\nWhat is the estimate of the y-intercept for the model, rounded to three decimal places?\n\n## {auto-animate=true}\n\nWhat is the estimate of the y-intercept for the model, rounded to three decimal places? 4",
    "supporting": [
      "03-simple_multiple_regression_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}